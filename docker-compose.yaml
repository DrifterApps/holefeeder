services:
  reverse-proxy:
    image: traefik:v3.0.1
    container_name: reverse-proxy
    restart: unless-stopped
    command:
      - '--configFile=/etc/traefik/traefik.yml'
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the static configuration into the container
      - .docker/traefik/traefik.${ENV}.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic configuration into the container
      - .docker/traefik/dynamic.${ENV}.yml:/etc/traefik/dynamic.yml:ro
      - traefik_certs:/letsencrypt

  whoami:
    image: traefik/whoami:v1.10
    container_name: whoami
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.whoami-router.entrypoints: websecure
      traefik.http.routers.whoami-router.rule: Host(`whoami.${DOMAIN}`)
      traefik.http.routers.whoami-router.tls: true
      traefik.http.routers.whoami-router.tls.certresolver: acme_certresolver

  seq:
    image: datalust/seq:2024.3
    container_name: seq
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - ACCEPT_EULA=Y
      - SEQ_API_KEY=${SEQ_API_KEY}
      - SEQ_BASE_URI=http://seq:5341
    expose:
      - 80
      - 5341
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.seq-router.entrypoints: websecure
      traefik.http.routers.seq-router.rule: Host(`seq.${DOMAIN}`)
      traefik.http.routers.seq-router.tls: true
      traefik.http.routers.seq-router.tls.certresolver: acme_certresolver
    volumes:
      - seq-data:/data

  mariadb:
    image: mariadb:11.4.2
    container_name: mariadb
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: holefeeder
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
    expose:
      - 3306
    volumes:
      - mariadb-data:/var/lib/mysql
      - .docker/scripts/mysql-initdb.sh:/docker-entrypoint-initdb.d/mysql-initdb.sh
    labels:
      traefik.enable: false

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    depends_on:
      - mariadb
    expose:
      - 8080
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.adminer-router.entrypoints: websecure
      traefik.http.routers.adminer-router.rule: Host(`adminer.${DOMAIN}`)
      traefik.http.routers.adminer-router.tls: true
      traefik.http.routers.adminer-router.tls.certresolver: acme_certresolver

  api:
    container_name: api
    restart: unless-stopped
    depends_on:
      - mariadb
    expose:
      - 80
    environment:
      ASPNETCORE_ENVIRONMENT: ${ENV}
      ASPNETCORE_URLS: http://+
      ConnectionStrings__BudgetingConnectionString: Server=mariadb;Port=3306;User Id=${MARIADB_USER};Password=${MARIADB_PASSWORD};Database=holefeeder;
      Serilog__WriteTo__1__Args__apiKey: ${SEQ_API_KEY}
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.api-router.entrypoints: websecure
      traefik.http.routers.api-router.rule: 'Host(`holefeeder.${DOMAIN}`) && (PathPrefix(`/gateway`) || PathPrefix(`/swagger`))'
      traefik.http.routers.api-router.tls: true
      traefik.http.routers.api-router.tls.certresolver: acme_certresolver
      traefik.http.routers.api-router.middlewares: gateway-remover
      traefik.http.middlewares.gateway-remover.stripprefix.prefixes: /gateway

  web:
    container_name: web
    restart: unless-stopped
    depends_on:
      - api
    expose:
      - 80
    environment:
      ASPNETCORE_ENVIRONMENT: ${ENV}
      ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: Microsoft.AspNetCore.SpaProxy
      ASPNETCORE_URLS: http://+
      AngularSettings__RedirectUrl: https://holefeeder.${DOMAIN}
      Serilog__WriteTo__1__Args__apiKey: ${SEQ_API_KEY}
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.web-router.entrypoints: websecure
      traefik.http.routers.web-router.rule: 'Host(`holefeeder.${DOMAIN}`) && !(PathPrefix(`/api`) || PathPrefix(`/swagger`))'
      traefik.http.routers.web-router.tls: true
      traefik.http.routers.web-router.tls.certresolver: acme_certresolver

networks:
  default:
    name: proxy

volumes:
  mariadb-data:
  seq-data:
  traefik_certs:
