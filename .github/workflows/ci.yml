name: Continuous Integration

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed]

    paths-ignore:
    - 'proxy/**'
    - 'docs/**'

env:
  DOCKER_REGISTRY: ghcr.io/drifterapps/holefeeder

jobs:

  set-version:
    name: Set version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      assembly-version: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Disable workflow commands
        run: |
          echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: Enable workflow commands
        run: |
          echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"

  build:
    name: Build and unit tests
    runs-on: ubuntu-latest
    needs: set-version
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
      ASSEMBLY_VERSION: ${{ needs.set-version.outputs.assembly-version }}

    steps:

    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      # with:
      #   install: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Web.Gateway container
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/ApiGateways/Web.Gateway/Dockerfile
        target: build
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-gateway-web:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Build Budgeting.API container
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/Services/Budgeting/Budgeting.API/Dockerfile
        target: build
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-budgeting-api:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Build ObjectStore.API container
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/Services/ObjectStore/ObjectStore.API/Dockerfile
        target: build
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-object-store-api:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Build Holefeeder.Web container
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/Web/Holefeeder.Web/Dockerfile
        target: build
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-web:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Build Budgeting.API unit tests
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/Services/Budgeting/Budgeting.API/Dockerfile
        target: unittests
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-budgeting-api-unittests:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Build ObjectStore.API unit tests
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/Services/ObjectStore/ObjectStore.API/Dockerfile
        target: unittests
        build-args: BUILD_VERSION=${{ env.VERSION }}
        push: false
        tags: ${{ env.DOCKER_REGISTRY }}/holefeeder-object-store-api-unittests:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Budgeting.API unit tests
      run: |
        docker create -ti --name testcontainer ${{ env.DOCKER_REGISTRY }}/holefeeder-budgeting-api-unittests:${{ env.VERSION }}
        docker cp testcontainer:/testsresults/ ./testsresults 
        docker rm -fv testcontainer

    - name: ObjectStore.API unit tests
      run: |
        docker create -ti --name testcontainer ${{ env.DOCKER_REGISTRY }}/holefeeder-object-store-api-unittests:${{ env.VERSION }}
        docker cp testcontainer:/testsresults/ ./testsresults 
        docker rm -fv testcontainer

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }}
      with:
        check_name: unit-test-results
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: ./testsresults/**/*.junit.xml

    - name: Setup .NET core
      uses: actions/setup-dotnet@v1
      if: ${{ always() }}
      with:
        dotnet-version: 5.0.301

    - name: Report generator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      if: ${{ always() }}
      with:
        reports: 'testsresults/*/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        sourcedirs: 'src/'
        reporttypes: 'HtmlInline;Cobertura'
        tag: '${{ github.run_number }}_${{ github.run_id }}'

    - name: Upload coverage report artifacts
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: coverage-report
        path: coveragereport

    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Docker login
      if: ${{ github.event.pull_request.merged == true && success() }}
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.DOCKER_REGISTRY }} -u DrifterApps --password-stdin

    - name: push containers
      if: ${{ github.event.pull_request.merged == true && success() }}
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/holefeeder-gateway-web:${{ env.VERSION }}
        docker push ${{ env.DOCKER_REGISTRY }}/holefeeder-budgeting-api:${{ env.VERSION }}
        docker push ${{ env.DOCKER_REGISTRY }}/holefeeder-object-store-api:${{ env.VERSION }}
        docker push ${{ env.DOCKER_REGISTRY }}/holefeeder-web:${{ env.VERSION }}
