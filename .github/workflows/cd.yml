name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    branches: [main]
    types: [completed]
  
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io/drifterapps/holefeeder

jobs:

  get-version:
    name: Set version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      assembly-version: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Disable workflow commands
        run: |
          echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"

      - name: Ensure .NET Installed
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: Enable workflow commands
        run: |
          echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: get-version
    env:
      VERSION: ${{ needs.get-version.outputs.version }}
      ENVIRONMENT: Production
      POD_KUBECONFIG: '${{ github.workspace }}/.kube/pod-kubeconfig'
    environment:
      name: production

    steps:

    - uses: actions/checkout@v2

    - uses: yokawasa/action-setup-kube-tools@v0.8.0
      with:
        kubectl: '1.22.2'
        kustomize: '4.4.0'
        skaffold: '1.32.0'

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Create .env.secrets file
      run: |
        printf "BUDGETING_CONNECTION_STRING=Server=mysql-prd;Port=3306;User Id=${{ secrets.MYSQL_USER }};Password=${{ secrets.MYSQL_PASSWORD }};Database=budgeting_prd;
        OBJECT_STORE_CONNECTION_STRING=Server=mysql-prd;Port=3306;User Id=${{ secrets.MYSQL_USER }};Password=${{ secrets.MYSQL_PASSWORD }};Database=object_store_prd;
        MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_USER=${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" > $GITHUB_WORKSPACE/kubernetes/prd/.env.secrets

    - name: Set image tags
      run: |
        cd $GITHUB_WORKSPACE/kubernetes/prd
        kustomize edit set image holefeeder/holefeeder-gateway-web=${{ env.DOCKER_REGISTRY }}/holefeeder-gateway-web:${{ env.VERSION }}
        kustomize edit set image holefeeder/holefeeder-budgeting-api=${{ env.DOCKER_REGISTRY }}/holefeeder-budgeting-api:${{ env.VERSION }}
        kustomize edit set image holefeeder/holefeeder-object-store-api=${{ env.DOCKER_REGISTRY }}/holefeeder-object-store-api:${{ env.VERSION }}
        kustomize edit set image holefeeder/holefeeder-web=${{ env.DOCKER_REGISTRY }}/holefeeder-web:${{ env.VERSION }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-do-holefeeder-cluster

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -k $GITHUB_WORKSPACE/kubernetes/prd
