name: Test Results

on:
  workflow_run:
    workflows: ["CI/CD"]
    types:
      - completed

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest

    steps:
      - name: Debug Action
        uses: hmarr/debug-action@v2.0.1

  test-results:
    name: Test Results
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'

    steps:
      - name: Download and Extract Artifacts
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
           mkdir -p artifacts && cd artifacts

           artifacts_url=${{ github.event.workflow_run.artifacts_url }}

           gh api "$artifacts_url" -q '.artifacts[] | [.name, .archive_download_url] | @tsv' | while read artifact
           do
             IFS=$'\t' read name url <<< "$artifact"
             gh api $url > "$name.zip"
             unzip -d "$name" "$name.zip"
           done

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          event_file: artifacts/Event File/event.json
          event_name: ${{ github.event.workflow_run.event }}
          files: "artifacts/**/*.xml"

      # - name: Setup .NET core
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 6.0.x

      # - name: Report generator
      #   uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      #   with:
      #     reports: 'artifacts/**/coverage.cobertura.xml'
      #     targetdir: 'coveragereport'
      #     sourcedirs: 'src/'
      #     reporttypes: 'HtmlInline;Cobertura'
      #     tag: '${{ github.run_number }}_${{ github.run_id }}'

      # - name: Upload coverage report artifacts
      #   uses: actions/upload-artifact@v2
      #   if: ${{ always() }}
      #   with:
      #     name: coverage-report
      #     path: coveragereport
